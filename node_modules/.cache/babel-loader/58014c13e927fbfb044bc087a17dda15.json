{"ast":null,"code":"var _jsxFileName = \"/Users/ryanlee/Desktop/NWHCP/nwhcp-frontend-5-8/src/Components/Results/ResultMap.js\";\nimport React, { Component } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Map } from 'react-leaflet';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction avgPt(arr) {\n  let total = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    total += arr[i];\n  }\n\n  return total / arr.length;\n}\n\nexport function ResultMap(props) {\n  let programs = props.programs;\n  let lats = programs.map(d => d.Lat);\n  let longs = programs.map(d => d.Long);\n  let center = [avgPt(lats)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 13,\n      scrollWheelZoom: false,\n      id: \"mapid\",\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [51.505, -0.09],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"A pretty CSS3 popup. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 42\n          }, this), \" Easily customizable.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_c = ResultMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultMap\");","map":{"version":3,"sources":["/Users/ryanlee/Desktop/NWHCP/nwhcp-frontend-5-8/src/Components/Results/ResultMap.js"],"names":["React","Component","MapContainer","TileLayer","Marker","Popup","Map","L","avgPt","arr","total","i","length","ResultMap","props","programs","lats","map","d","Lat","longs","Long","center"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,GAAjD,QAA4D,eAA5D;AACA,OAAOC,CAAP,MAAc,SAAd;;;AAEA,SAASC,KAAT,CAAeC,GAAf,EAAoB;AAChB,MAAIC,KAAK,GAAG,CAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,KAAK,IAAID,GAAG,CAACE,CAAD,CAAZ;AACH;;AACD,SAAOD,KAAK,GAAGD,GAAG,CAACG,MAAnB;AACH;;AAED,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAE7B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAEA,MAAIC,IAAI,GAAGD,QAAQ,CAACE,GAAT,CAAaC,CAAC,IAAIA,CAAC,CAACC,GAApB,CAAX;AACA,MAAIC,KAAK,GAAGL,QAAQ,CAACE,GAAT,CAAaC,CAAC,IAAIA,CAAC,CAACG,IAApB,CAAZ;AAEA,MAAIC,MAAM,GAAG,CAACd,KAAK,CAACQ,IAAD,CAAN,CAAb;AAEA,sBACI;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,MAAM,EAAE,CAAC,MAAD,EAAS,CAAC,IAAV,CAAtB;AAAuC,MAAA,IAAI,EAAE,EAA7C;AAAiD,MAAA,eAAe,EAAE,KAAlE;AAAyE,MAAA,EAAE,EAAC,OAA5E;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,WAAW,EAAC,0EADhB;AAEI,QAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,CAAC,IAAV,CAAlB;AAAA,+BACI,QAAC,KAAD;AAAA,2DACqB;AAAA;AAAA;AAAA;AAAA,kBADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;KAxBeH,S","sourcesContent":["import React, {Component} from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Map } from 'react-leaflet';\nimport L from 'leaflet';\n\nfunction avgPt(arr) {\n    let total = 0;\n    for (let i = 0; i < arr.length; i++) {\n        total += arr[i]\n    }\n    return total / arr.length\n}\n\nexport function ResultMap(props) {\n\n    let programs = props.programs\n\n    let lats = programs.map(d => d.Lat)\n    let longs = programs.map(d => d.Long)\n\n    let center = [avgPt(lats)]\n\n    return (\n        <div>\n            <MapContainer center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false} id=\"mapid\">\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                <Marker position={[51.505, -0.09]}>\n                    <Popup>\n                    A pretty CSS3 popup. <br /> Easily customizable.\n                    </Popup>\n                </Marker>\n            </MapContainer>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}